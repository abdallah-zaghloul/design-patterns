<?php

namespace AbdallahZaghloul\DesignPatterns\Tests;

use AbdallahZaghloul\DesignPatterns\Behavioral\Command\CLIInvoker;
use AbdallahZaghloul\DesignPatterns\Behavioral\Command\DeployCommand;
use AbdallahZaghloul\DesignPatterns\Behavioral\Command\GitReceiver;
use AbdallahZaghloul\DesignPatterns\Behavioral\Command\RevertDeployCommand;
use PHPUnit\Framework\TestCase;
class CommandTest extends TestCase
{
    private CLIInvoker $cli;
    private GitReceiver $gitReceiver;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->cli = new CLIInvoker();
        $this->gitReceiver = new GitReceiver();
    }

    public function testCanExecuteDeployCommand()
    {
        $command = new DeployCommand($this->gitReceiver);
        $this->cli->setCommand($command);
        $this->cli->run();
        $this->assertEquals([
            'git add',
            'git commit',
            'git push',
        ],$this->gitReceiver->getActions());
        $this->assertCount(3,$this->gitReceiver->getLogs());
    }

    public function testCanExecuteRevertDeployCommand()
    {
        $command = new DeployCommand($this->gitReceiver);
        $this->cli->setCommand($command);
        $this->cli->run();
        $this->assertEquals([
            'git add',
            'git commit',
            'git push',
        ],$this->gitReceiver->getActions());
        $this->assertCount(3,$this->gitReceiver->getLogs());

        $revertCommand = new RevertDeployCommand($this->gitReceiver);
        $this->cli->setCommand($revertCommand);
        $this->cli->run();
        $this->assertEquals([
            'git add',
            'git commit',
            'git push',
            'git revert (git add)',
            'git revert (git commit)',
            'git revert (git push)',
        ],$this->gitReceiver->getActions());
        $this->assertCount(6,$this->gitReceiver->getLogs());
    }

}