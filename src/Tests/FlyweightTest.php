<?php

namespace AbdallahZaghloul\DesignPatterns\Tests;

use AbdallahZaghloul\DesignPatterns\Structural\Flyweight\DayDiscount;
use AbdallahZaghloul\DesignPatterns\Structural\Flyweight\DiscountStaticFactory;
use AbdallahZaghloul\DesignPatterns\Structural\Flyweight\ItemDiscount;
use PHPUnit\Framework\TestCase;
class FlyweightTest extends TestCase
{
    private int $itemId;
    private string $day;
    private float $itemDiscount;
    private float $dayDiscount;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->itemId = 1;
        $this->day = 'sunday';
        $this->itemDiscount = (new ItemDiscount())->getItemDiscount($this->itemId);
        $this->dayDiscount = (new DayDiscount())->getDayDiscount($this->day);
    }

    public function testCanCalculateDayDiscount()
    {
        $discountFactory = new DiscountStaticFactory();
        $dayDiscount = $discountFactory::build('day');
        $expectedDiscount = $this->dayDiscount;
        $this->assertEquals($expectedDiscount, $dayDiscount->calculateDiscount($this->day));
    }

    public function testCanCalculateItemDiscount()
    {
        $discountFactory = new DiscountStaticFactory();
        $itemDiscount = $discountFactory::build('item');
        $expectedDiscount = $this->dayDiscount + $this->itemDiscount;
        $this->assertEquals($expectedDiscount, $itemDiscount->calculateDiscount($this->day, $this->itemId));
    }

}